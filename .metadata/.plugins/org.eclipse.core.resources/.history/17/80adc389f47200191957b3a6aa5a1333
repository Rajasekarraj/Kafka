package com.kafka.example.twitter4j;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.kafka.example.model.User;

@SpringBootApplication
public class Twitter4jApplication {

	public static void main(String[] args) {
		SpringApplication.run(Twitter4jApplication.class, args);
	}

}
@RestController
@RequestMapping("kafka")
class receiveData{
	@Autowired
	private KafkaTemplate<String,User> kafkaTemplate;
	
	private static final String TOPIC = "Kafka_Tweet";
	
	@GetMapping("/publish/{name}")
	public String post(@PathVariable("name") final String name) {
		kafkaTemplate.send(TOPIC,new User(name,"IT",15000L));
		return "Successfully published";
	}
}